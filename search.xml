<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>FDMEE Design</title>
      <link href="/2019/08/20/FDMEE%20Design/"/>
      <url>/2019/08/20/FDMEE%20Design/</url>
      
        <content type="html"><![CDATA[<p>For “FDMEE Design” book user only:</p><p>Chapter 1.1 Create HFM (from ADS)<br>IFRS<br>IFRS8<br>IFRS9</p><a id="more"></a><p>Chapter 1.2 Create HFM (Traditional Way)<br>HWG HFM Application elements</p><p>Chapter 1.3. Create HFM (from LCM)<br>HWG HFM Application elements<br>Chapter 1.4 Create Planning Application<br>VISION8<br>VISION9<br>Chapter 2.1 Import CSV to Planning (Simple)<br>C5_CSV2Planning</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Understanding Hyperion Upgrades</title>
      <link href="/2019/08/20/Understanding%20Hyperion%20Upgrades/"/>
      <url>/2019/08/20/Understanding%20Hyperion%20Upgrades/</url>
      
        <content type="html"><![CDATA[<p>Any voyage or journey has a starting point and a target destination. They say it’s all about the journey and how true is that? And guess what, it’s not any different for Hyperion upgrades. However, for the sake of Hyperion let’s assume this journey is more like the Amazing Race and time &amp; budget are limited and our aim is to complete each stage of the project correctly and on time to progress to the next stage with ultimate aim of completing the upgrade project successfully and on time &amp; budget.</p><a id="more"></a><p>Unlike the amazing race if you do achieve this you won’t win $1 Million dollars and celebrate on TV, rather you get to celebrate at the post go-live party (yes have a party you deserve it) with the project team and dish out high 5s as much as you like. Let’s face it you love what you do, and to you, your Hyperion Upgrade project is a challenge that you won’t let defeat you.<br>For Hyperion upgrades the journey is as follows and the steps between start and the end goal require careful planning:</p><p>Upgrade Type<br>Let us start by understanding the various upgrade types, from there depending on the current version and strategy we can map out our journey ahead clearly. It is also essential whatever solution you choose the path you follow is completely supported, to ensure if any issues are encountered you have Oracle support at your fingertips.<br>    • In-Place Upgrade (Maintenance Release) – This approach involves installing the latest release over the top off the existing version. Currently this is only support for 11.1.2.x versions. It is essential when using this approach to ensure the underlying platform (hardware, OS &amp; Relational versions) is able to supported source and target versions.</p><pre><code>• Out-Of-Place Upgrade (Upgrade) – This involves upgrading directly from the old platform (OS/Relational/Servers/Hyperion software versions) to the new platform (OS/Relational/Servers/Hyperion software versions). This is only supported for source release version 11.1.1.4.• Staging Upgrades – This involves creating an environment purely for upgrade purposes and using this environment as the transition environment from one version to the next. Usually I recommend this is to be a compact single server environment to allow a quick upgrade actions on a single server and at the same time removing the impact on the existing environments. The process involves installing the current version of software on staging environment, upgrade staging environment to latest version and finally migrating to new environments on latest supported platform. It is essential to ensure that the underlying platform (OS &amp; Relational versions) are supported by both source and target versions. The staging approach can be used for In-Place Upgrades or Out-Of-Place Upgrades with main purpose as describe to avoid impact on existing environments and to ensure the final environment can be on the latest possible platform for the target version.• Hybrid Approach (In-place &amp; Out of Place Combinations) – To upgrade some versions you may require to action both approaches. For Example, if the source environment is 11.1.1.3 and the target is 11.1.2.4. You will first need to in-place upgrade from 11.1.1.3 to 11.1.1.4, then out-place to 11.1.2.3, then in-place upgrade to 11.1.2.4. In such complex upgrades I almost always recommend the actions to be done in staging environment(s) to avoid impact the existing environments and minimise upgrade time.• Rebuild In New Version – At times the solution is best to rebuild. The time that would be spent upgrading can be used to make changes / improvements to the existing solution. For example, if the chart of accounts was to change entirely there would potentially be design changes needed to the solution. At times after having the system for some time the business now realises exactly what they are after and now want it rebuilt a specific way. This is also an excellent way of taking advantage of new features/functionality and building the tool with the latest capability available. Another interesting option to rebuild the new solution in Oracle Planning &amp; Budgeting Cloud Service (PBCS). PBCS is a subscription based solution that is hosted on Oracle’s Cloud platform and could be an excellent solution for the right client who is looking to rebuild their solution.• Partial Rebuild in New Version and Upgrade – This involves only rebuilding certain components that are easier to rebuild and to upgrade the remaining components using one of the above mentioned processes. I usually recommend this when going from Financial Data Quality Management (FDM) classic to Financial Data Quality Management Enterprise Edition (FDMEE) or when transitioning to use different products.</code></pre><p>Below I have highlighted the supported upgrade paths to 11.1.2.4 for reference to assist in identifying the strategy that best suits.<br>Path From Release …    To Release 11.1.2.4<br>11.1.2.x     Apply the maintenance release to move to Release 11.1.2.4.Note: For Financial Close Management, applying the maintenance release is supported only from Release 11.1.2.2 or 11.1.2.3. For Financial Management, applying the maintenance release is supported only from Release 11.1.2.1, 11.1.2.2 or 11.1.2.3.When you apply the maintenance release, you must install to the same machine as the previous installation. Out of place installations are not supported. To move to a new environment, first apply the maintenance release to move to Release 11.1.2.4, and then use Lifecycle Management to migrate the deployment to a new environment.<br>11.1.1.4.x    Upgrade to Release 11.1.2.3, and then apply the maintenance release to move to Release 11.1.2.4.<br>11.1.1.0.x to 11.1.1.3.x    Apply the maintenance release to move to Release 11.1.1.4, upgrade to Release 11.1.2.3, and then apply the maintenance release to move to Release 11.1.2.4.<br>Based on experience, my recommendation usually either falls in the staging approach, the in-place upgrade or rebuild territories. I recommend that people upgrade more regularly to avoid complex and costly upgrades. Maintenance release or in-place upgrades are quick to complete and are more like applying complex patching rather than upgrading. I also tend to really like the staging approach because it gives the simplicity of upgrading a single server instead of many in a distributed setup. This is extremely handy, especially when it comes to taking snapshot/clone backups along the way in the upgrade process. In the end whatever approach you choose is best determined by where you are and where you are trying to go and there will always be something that best suits your specific needs.<br>Final Cut-over<br>Unless you are using the in-place upgrade approach. You will end up with two systems, the old system and the upgraded system and you will need to transition to the new system at the end of the upgrade project. As can be seen above, a number of steps were required to get the system upgraded to the newest platform. Hyperion does not support migrations from one version to another using any standardized migration approach (for example life cycle manager). To migrate from one version to another one must follow the above mentioned migration steps. To cut-over to the new system here are the options available:<br>    • Action the entire upgrade with the old system in read-only and go live on the new version<br>    • Repeat the upgrade process once tested with old system in read-only and go-live<br>    • Track metadata changes and sync metadata manually on new system. Data can be exported and imported from old to new system. In this approach some metadata that was updated during the upgrade project cannot be synced (supporting detail, cell text and commentary in planning).<br>Essentials vs Nice-To-Have<br>There is always the question of what to include as part of the project and a lot of time this is determined by the available budget. The analogy I like to draw is that of buying a car. When buying a car there are some standard things you get and then a number of things that you can get as optional extras (Airbags will be standard and leather may be optional).<br>There may also be an internal standards within organisations that might dictate what is a must vs what nice to have is. For example, for some clients IT policy may dictate that SSL must be implemented whilst others may not. It is thus essential to capture the requirement clearly in a technical solution design and ensure is in-line with budget expectations and implement accordingly.<br>For the sake of this blog post I am going to list what I like to ensure are essential and what I like to include as optional items.<br>Essential    Technical Design &amp; Project PlanHyperion Installation, Upgrade &amp; Migration TasksIntegration Components Installation, Upgrade &amp; Migration TasksApply Latest PatchesCustomized Start-up Scripts<br>    High-Level Base Tuning<br>    Hyperion Overnight Maintenance Solution<br>    Backup / Restore Solution<br>    Technical Testing (Includes Stress Testing)<br>    Functional Testing (Includes UAT and Go-Live Testing)<br>    Latest Client Tool Roll-out<br>    Training<br>    Documentation (Installation, Admin &amp; Training Documentation)<br>Optional    SSL SetupHigh-Availability (Vertical or Horizontal Scaling/Clustering)Disaster RecoveryAdopting New Available FunctionalityImprovements<br>    In-depth Tuning<br>    Single Sign-On</p><p>Setting Success Criteria<br>When upgrading a system, you need to define your success criteria. I have noted some of the basic ones below, but I must note that each upgrade may have different success criteria depending on the need:<br>    • Successful Upgrade – The upgrade is successful and new version is rolled out to users, customer is happy.<br>    • Solution &amp; Upgrade Strategy Is Supported – Final solution is on a supported platform and the upgrade strategy to get there is fully supported. Final solution should also support for the latest client OS, Microsoft Office, Adobe and browser versions being rolled out / planned for the organization. The solution should also be in line with organization strategies for Server OS &amp; Relational Server versions.<br>    • Performance Improvements – Performance improvements are just the icing on the cake and probably the most noticeable given their direct impact on users and the user experience. The best way I can land this home with you is to draw the similarity of areas in life where we saw massive improvements and can’t imagine going backwards, for example, internet on dial-up speed vs now. Performance in Hyperion is usually out of the box software/hardware based or tuning the software/hardware to get the best performance out of them.<br>        ○ Software improvements – usually involve changes that have been made to the actual software that is out of the box or requires changes to be instated. For example, Hyperion 11.1.2.4 contains out of the box improvements such as Web Tier Performance, HFM Consolidation speeds and stable Essbase Hybrid (ASO/BSO) capability.<br>        ○ Hardware performance improvements – are usually benefits that are made by implementing a specific infrastructure configuration or implementing better hardware (better technology and specifications). Examples of areas that can make performance improvements:<br>            § Fast Disks or Solid State Disks<br>            § Implementing the Right Raid Configuration<br>            § Engineered Systems (Exalytics)<br>            § CPU (both number of cores and GHz are important)<br>    • Meeting the Deadline / Budget – In short three key things:<br>        ○ Good Project Management – careful management of project tasks / timelines is essential. I always recommend planning carefully and avoiding a squeezed schedule where possible, as a risk is always what if something goes wrong in the upgrade process or what if we encounter an unexpected error. A good project plan will allow for such risks and a good project manager will manage them and the issues as they arise.<br>        ○ Good Technical Resources – This is like having a number 10 in a football pitch, he simply delivers. It’s as simple as this, when the game is tied at 0-0, he will score the winning goal or will find a way to get his team to glory. Likewise, a good technical resource has the knowledge and will not rest till he gets the job done. A good technical resource will be technically skilled, will have excellent communication skills and professionalism, can effectively translate the business requirement into a technical solution, will have strong business awareness and will be able to follow the project plan effectively and report deviations / issues as and when they happen to the project manager and to the client effectively.<br>        ○ Availability of IT &amp; Business Resources – Business resources are required to test at various stages in the upgrade process. IT availability is required to prepare environments and provide ad-hoc support for Server and DBA tasks at various stages in the upgrade process.<br>    • Minimizing Downtime – Think wrestling, specifically WWE, WWF or WCW, whatever you watched or didn’t watch. There are times when a team of wrestlers would tag team the opponent for a short duration of time. When it comes to minimizing downtime the Tag team strategy is my favorite. This can involve multiple resources working on the tasks at same time or in handover approach to maximize the work done in one day.<br>    • Fixes for Existing Issues / New Functionality – For some older versions patches/fixes are no longer being released and in some cases even in more recent versions the fixes are applied only to the latest version. To give an example 11.1.2.1 is not seeing any recent patches, 11.1.2.3 still has patches being released. Having said that a lot of fixes / functionality may only made available in 11.1.2.4 version and its patches. The features and functionality is essential and at times the reason for upgrading, to compare the versions and see what is available, see the cumulative feature overview: <a href="https://apexapps.oracle.com/pls/apex/f?p=20620:1:0" target="_blank" rel="noopener">https://apexapps.oracle.com/pls/apex/f?p=20620:1:0</a><br>    • New Version Doesn’t Introduce Major Issues – Patch readmes should be reviewed to ensure any known issues are reviewed and no new major issues are introduced with the latest version. You should also check the defect finder available at: <a href="https://support.oracle.com/epmos/faces/DocumentDisplay?id=1292603.1" target="_blank" rel="noopener">https://support.oracle.com/epmos/faces/DocumentDisplay?id=1292603.1</a><br>The Platform<br>Getting the final platform right is a key component of the upgrade. As mentioned prior, performance improvements and supportability are key, thus we need to spend the time to ensure the latest platform will deliver exactly that.<br>Changing the Platform (OS &amp; Relational Types/Versions)<br>The platform you decide to host the final solution on will also have a great impact on the approach you take. Hyperion has the capability to migrate using the Life Cycle Manager (LCM) across Hyperion environments of the same version, but on heterogeneous platforms. You cannot however do upgrades to different platforms of type direct In-Place Upgrade (Maintenance Release) or Out-Of-Place Upgrade (Upgrade) as these are dependent the OS family and the relational family you are currently running. For example, if using Windows Server OS and Microsoft SQL Server Database you must use the same platform if using direct In-Place Upgrade (Maintenance Release) or Out-Of-Place Upgrade (Upgrade) approaches. There are three approaches you can consider if wanting to change platform (OS or Relational):<br>    • Make the change on the current version – migrate to environment to desired platform or reconfigure system as required then perform the upgrade steps.<br>    • Make the change on the target version – upgrade system on current platform then migrate to environment to desired platform or reconfigure system as required.<br>    • Use the Staging upgrade approach (recommended approach) – refer to approach mentioned in the first section. Once the staging environment is upgraded it can be migrated to the new platform.<br>Physical vs Virtual Hosts<br>When it comes to this decision 90% of the time you may feel like to go physical is to try to move the wall of China and in conversations with IT, “will be the wall of China is not moving”. The reality is that IT at most organizations have spent the last 10 years moving all their platforms to centralized virtual solutions with the aim to reduce cost, increase flexibility, allow better scalability, improve/streamline backup and DR processes and in overall try to implement a better solution for the business. In more recent times with cloud/hosting solutions hitting the world by storm the concept is even further evolving by doing all of the above mentioned without having to maintain and support the hardware it sits on. The reality is this simple, the decision has two critical factors: support and performance.<br>        ○ Support – When it comes to support Oracle only certify/fully support the Hyperion system to run on Oracle Virtual Machines. All other third-party virtual platforms get restricted/best effort support. What does this mean? In restricted support, Oracle may ask you to recreate the issue in a physical environment if they suspect the virtual layer is at fault. More information on this topic can be found at Oracle Support Document 588303.1 (Support for Oracle’s Hyperion Products in 3rd Party Virtualized Environments): <a href="https://support.oracle.com/epmos/faces/DocumentDisplay?id=588303.1" target="_blank" rel="noopener">https://support.oracle.com/epmos/faces/DocumentDisplay?id=588303.1</a>. The reality is a lot of people are running Hyperion on platforms like VMWARE and are doing so very successfully without issue. I personally have never been asked to recreate the issue on an alternate physical platform and as stated have gotten best effort support. Please do not take this by any means that VMWARE is ok and the Oracle statement is irrelevant; this is more to say that if considering a virtual platform, this is a consideration that must be understood.<br>        ○ Performance – In my experience physical is the ultimate way to guarantee performance of your system, especially with the appropriate architecture is applied. To understand this, you need a good understanding of physical and virtual platforms. Physical especially with dedicated local disks ensures all the resources on the server are dedicated to the software and OS components running on that host. Virtual is designed to share the resources of the host between many virtual machines (VMs) all living on the host or multiple hosts. This means that all the Software and OS components will be sharing server resources (RAM, CPU, DISK, NETWORK) with other software and OS components on other VMs.                                                                                                    The reality is that there is no clear cut answer that physical will give you better performance as the performance of virtual is dependent the underlying host resources and how much resources are dedicated to each virtual machine. Most virtualisation platforms will allow over allocation of CPU, meaning that you can have 6 VMs with 4 cores each on a host machine with 8 cores. In this example if more than 2 machines were busy, the other 4 VMs may need to wait for the host CPU to become available for them to process their required tasks. This is an example of over-allocation of resources and should be avoided to achieve best possible performance in a virtual environment. In the next example, we will also show how a virtual platform can offer better performance than a physical platform. If you had 3 physical machine with 8 Cores at 2.6GHz and 3 machines visualized on an Exalytics host with 60 cores at 2.6GHz, you can easily see how in this scenario the virtualised will easily outperform the physical machine.      However, the dark reality is that in most cases the virtualised solutions are in many cases are over-allocated, under-speced and are a one size fits all setup. Usually IT departments will ensure databases and ERP systems are given the best possible resources and everything else gets the one size fits all strategy. What many fail to realize is that Hyperion runs Essbase Server Database (a multidimensional database, scrap that, the world’s best multidimensional database). Essbase is extremely IO, CPU and memory intensive like its relational cousins. Therefore the key thing is to ensure that we treat Essbase as an enterprise database server that shall be responsible for planning, budgeting and reporting across the business. With the exception of Hyperion Financial Management that stores and consolidates data in a relational database; all other Hyperion data is housed in Essbase. By ensuring that Essbase has the best we can give it will help ensure the ideal planning, budgeting and reporting solution outcome.                                                                                                                                                     In summary, when comparing apples with apples, three servers given the exact same specs on a virtual platform vs a physical platform, physical will achieve best possible performance as the resources will be dedicated to each of those machines and resource contention is not a concern. If the aim is to maximize performance and cost is not an option, consider Exalytics, Exalytics is an engineered system for Hyperion / BI with performance as the main focus. Exalytics is an easier sell to IT when trying to go physical as is a specialized hardware for the software being implemented. In saying all this provided a virtual environment is setup correctly, there is no reason why virtual platforms cannot provide good performance and be successful for enterprise Hyperion deployments. The key to all this is discussions and establishing good relations with IT and together working towards the ideal solution for the organization.<br>Sizing<br>When it comes to sizing an environment this is dependent on model complexity, expected application growth, number of users, expect user concurrency and the platform this is to be installed on.<br>It is incredibly hard to give a quick guide on how to size Hyperion environments given there are so many variables as defined above. So rather than exact details or sample deployment scenarios I will give guidelines I believe are good starting points.<br>Oracle’s Minimum / Default Starting Point:<br>The Oracle documentation provides the below as the minimum standard deployment starting point. This is not a bad starting point to start your blueprint for the architecture design. In my opinion, the below is valid only as a minimum starting point with exception of RAM on the Foundation Server. Out of the box each EPM Web Application product will use up to 4GB of memory. The 6GB recommendation on most servers will cater for the product and leave some room for the OS. The Foundation Server is made up of a number of products such as Foundation Web Application, Framework Services, Framework Web Application, Essbase Administration Services Web, Provider Services Web, Financial Reporting Web, Web Analysis Web, Enterprise Performance Management Architect, Oracle HTTP Server and Weblogic Application Server. From my experience running all these component on a single server would require more than 10GB. To fit products in 10GB you would need to reduce the maximum memory for all web applications via adjusting the JVM –Xmx parameter and I do not recommend this.<br>EPM System Instance/Server    Processor    Memory<br>Foundation    4 core    10 GB<br>Planning    4 core    6 GB<br>Essbase    4 core    6 GB<br>Financial Management    4 core    6 GB<br>Profitability    4 core    6 GB<br>Strategic Finance    4 core    6 GB<br>FDMEE    4 core    6 GB<br>Platform Choice:<br>    • &lt;100 User / Average Complexity – Consider Virtual / Physical / Hybrid (Essbase Physical)<br>    • 100+ Users / Complex Models – Consider a Dedicated Virtual / Hybrid (Essbase Physical) / Physical / Exalytics<br>    • 300+ User / Complex Models – Consider Physical / Exalytics<br>Number of Servers:<br>    • Virtual – More Servers, less consolidation due to resource contention.<br>    • Physical –<br>    • Exalytics – Excellent for consolidations, in most cases all products can live on one Server.</p><p>Server Resources:<br>    • Virtual – Particularly in non-dedicated resource allocation, avoid high resource allocation of server resources to avoid resource contention. This is more relevant to CPU more than other server resources.<br>        ○ CPU – Do not allocate more than 4 cores as can cause resource contention<br>        ○ CPU – Avoid over allocated hosts.<br>        ○ DISK – Dedicated LUNs / Fast disk where possible<br>    • Physical –<br>        ○ CPU (both number of cores and GHz are important)<br>        ○ PRODUCT SPLIT – Keep Essbase on its on host<br>        ○ DISK – Local Disks / Fast Disk / As Fast as possible for Essbase Data.<br>        ○ Exalytics – ensure the flash kit is included to maximize Essbase performance.</p><p>In summary<br>I hope this has shed some in-depth light on Hyperion upgrades and has helped arm you with knowledge for the journey ahead. I wish you best of success, this is Ahmed Hafez, signing out.<br>May the force be with you.<br>extracted from: <a href="https://hyperionjedi.com/2016/03/06/understanding-hyperion-upgrades/" target="_blank" rel="noopener">https://hyperionjedi.com/2016/03/06/understanding-hyperion-upgrades/</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电脑同时登陆多个微信</title>
      <link href="/2019/08/20/Solar%20Energy%20for%20Mother%20Earth%20and%20Everyday%20Smiles/"/>
      <url>/2019/08/20/Solar%20Energy%20for%20Mother%20Earth%20and%20Everyday%20Smiles/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Extend Windows Server Evaluation Period</title>
      <link href="/2019/08/20/Extend%20Windows%20Server%20Evaluation%20Period/"/>
      <url>/2019/08/20/Extend%20Windows%20Server%20Evaluation%20Period/</url>
      
        <content type="html"><![CDATA[<p>Open Command Prompt as Administrator.</p><p>slmgr.vbs /rearm<br>for windows 2008 the command will be slmgr.vbs -rearm instead of slmgr.vbs /rearm.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu all in one</title>
      <link href="/2019/08/20/Ubuntu%20all%20in%20one/"/>
      <url>/2019/08/20/Ubuntu%20all%20in%20one/</url>
      
        <content type="html"><![CDATA[<p>Lisa Scholfield</p><p>From <a href="http://hypech.com/wp-admin/edit.php" target="_blank" rel="noopener">http://hypech.com/wp-admin/edit.php</a> </p><p>Installation, Kaldi</p><p>From <a href="http://hypech.com/wp-admin/edit.php" target="_blank" rel="noopener">http://hypech.com/wp-admin/edit.php</a> </p><p>blog, photos, tips</p><p>From <a href="http://hypech.com/wp-admin/edit.php" target="_blank" rel="noopener">http://hypech.com/wp-admin/edit.php</a> </p><p>Published<br>2018/11/09</p><p>From <a href="http://hypech.com/wp-admin/edit.php" target="_blank" rel="noopener">http://hypech.com/wp-admin/edit.php</a> </p><a id="more"></a><p>Ubuntu操作基本快捷键</p><ul><li>打开主菜单 = Alt + F1</li><li>运行 = Alt + F2</li><li>显示桌面 = Ctrl + Alt + d</li><li>最小化当前窗口 = Alt + F9</li><li>最大化当前窗口 = Alt + F10</li><li>关闭当前窗口 = Alt + F4</li><li>截取全屏 = Print Screen</li><li>截取窗口 = Alt + Print Screen<br>默认特殊快捷键</li><li>展示所有窗口程序 = F10</li><li>展示当前窗口最上层程序 = F11</li><li>展示当前窗口所有程序 = F12</li><li>切换窗口 = Alt + Tab </li><li>旋转3D桌面 = Ctrl + Alt + 左/右箭头（也可以把鼠标放在标题栏或桌面使用滚轮切换）</li><li>旋转3D桌面（ 活动窗口跟随） = Ctrl + Shift + Alt + 左/右箭头</li><li>手动旋转3D桌面 = Ctrl + Alt + 左键单击并拖拽桌面空白处</li><li>窗口透明/不透明 = possible with the “transset” utility or Alt + 滚轮</li><li>放大一次 = 超级键 + 右击</li><li>手动放大 = 超级键 + 滚轮向上</li><li>手动缩小 = 超级键 + 滚轮向下</li><li>移动窗口 = Alt + 左键单击</li><li>移动窗口时贴住边框 = 左键开始拖动后再 Ctrl + Alt</li><li>调整窗口大小 = Alt + 中击</li><li>Bring up the window below the top window = Alt + middle-click</li><li>动态效果减速 = Shift + F10</li><li>水纹 = 按住 Ctrl+超级键</li><li>雨点 = Shift-F9</li><li>桌面展开＝ Ctrl + Alt + 下箭头，然后按住 Ctrl + Alt 和左/右箭头选择桌面<br>Alt + Shift+ Up Arrow – 以很酷的方式显示当前窗口<br>Nautilus</li></ul><ol start="11"><li>Shift+Ctrl+N – 新建文件夹, 很有用</li><li>Alt + Enter – 查看选择文件/文件夹的属性，代替单击右键选择属性</li><li>Ctrl + 1/2 – 改变文件夹视图查看方式，图标视图/列表视图</li><li>Ctrl + W – 关闭当前Nautilus窗口</li><li>Ctrl + Shift + W – 关闭所有Nautilus窗口</li><li>Ctrl+T – 在Nautilus中新建一个标签</li><li>Alt + Up/Down Arrow – 移动到父文件夹/选择的文件夹</li><li>Alt + Left/Right Arrow – 后退/前进</li><li>Alt + Home -直接移动到主文件夹</li><li>F9 – 开关显示Nautilus侧边栏</li><li>Ctrl + H -开关显示隐藏文件夹<br>程序中常用的快捷键：<br>Ctrl+N 新建<br>Ctrl+X 剪切<br>Ctrl+C 复制<br>Ctrl+V 粘贴<br>Ctrl+Z 撤销<br>Ctrl+S 保存<br>Ubuntu Gnome的桌面技巧：<br>===键盘类===</li><li>先同时按住 Alt + Ctrl 键，再按键盘上的左 右光标 键 可以切换工作区</li><li>web时按 “/” 键 等于 查找功能,桌面或者目录时按” /” 等于”打开..”</li><li>当前目录下快速文件(夹)定位, 直接输入文件(夹)名字</li><li>shift键 可以对scim的中英输入快速切换,windows下的智能ABC一样</li><li>alt+左右可以前进后退页面</li><li>屏幕锁定: Alt+Ctrl+L 等价于Windows中的Win键 + L, ctrl+alt+d 相当于Windows中的Win键 +D<br>——换句话说,Alt+Ctrl相当于Win键——</li><li>Ctrl+Alt+Shift+左右方向键，可以把当前窗口移到上一个或下一个桌面</li><li>Alt+Tab向左切换窗口,Alt+Shift+Tab向友切换窗口<br>===鼠标类===</li><li>直接拖拉在最大化时的窗口标题可以还原窗口大小,再拖放回去就最大化</li><li>在音量控制处用鼠标滚轮滚动可以直接调整音量,在任务栏中滚动滚轮可以切换任务栏,工作区则切换工作区</li><li>浏览网页的时候直接把图片落到保存目录既可下载</li><li>按鼠标滚轮即张贴, 同时按下鼠标 左右键等价于按鼠标中键 –&gt;引伸到,在web上选中文字,直接双键(中键)可以张贴选中的文字</li><li>工作区里的小窗口可以在不同工作区内拖拉,即移动到….(工作区)的功能</li><li>shift + 鼠标滚轮 可以后退页面</li><li>鼠标中键点标题栏可以隐藏当前窗口</li><li>按住shift 拖动窗口可以吸附上下边缘的移动</li><li>直接将 文件管理器 中的文件拖到 GNOME终端 中就可以在终端中得到完整的路径名</li><li>修改目录图标：可将文件管理器中的图片直接拖到文件夹属性所在的图标上.</li><li>鼠标中键直接单击 滚动条 的空白处，屏幕即滚动到那处。</li><li>中键拖动图片到桌面，可选择设为墙纸<br>其他<br>Ctrl + Alt + L -锁屏<br>Alt + F1 – 打开应用程序菜单<br>Alt + F2 – 打开运行应用程序对话框<br>Win + 鼠标滚轮 – 放大/缩小屏幕<br>通用快捷键<br>Alt + F1 类似Windows下的Win键，在GNOME中打开”应用程序”菜单(Applications)<br>Alt + F2 类似Windows下的Win + R组合键，在GNOME中运行应用程序<br>Ctrl + Alt + D 类似Windows下的Win + D组合键，显示桌面 ！<br>Ctrl + Alt + L 锁定桌面并启动屏幕保护程序<br>Alt + Tab 同Windows下的Alt + Tab组合键，在不同程序窗口间切换<br>PrintScreen 全屏抓图<br>Alt + PrintScreen 当前窗口抓图<br>Ctrl + Alt + → / ← 在不同工作台间切换<br>Ctrl + Alt + Shift + → / ← 移动当前窗口到不同工作台<br>Ctrl+Alt+Shift+Fn 终端N或模拟终端N(n和N为数字1－6)<br>Ctrl+Alt+F7 返回桌面<br>Ctrl+Alt+Shift+F8 未知（终端或模拟终端）<br>窗口操作快捷键<br>Alt + F4 关闭窗口<br>Alt + F5 取消最大化窗口 (恢复窗口原来的大小)<br>Alt + F7 移动窗口 (注: 在窗口最大化的状态下无效)<br>Alt + F8 改变窗口大小 (注: 在窗口最大化的状态下无效)<br>Alt + F9 最小化窗口<br>Alt + F10 最大化窗口<br>Alt + Space 打开窗口的控制菜单 (点击窗口左上角图标出现的菜单)<br>应用程序中的常用快捷键<br>(注: 并不适用于所有程序) 基本和win没什么区别<br>Ctrl+N 新建窗口<br>Ctrl+X 剪切<br>Ctrl+C 复制<br>Ctrl+V 粘贴<br>Ctrl+Z 撤销上一步操作<br>Ctrl+Shift+Z 重做刚撤销的一步操作<br>Ctrl+S 保存<br>文件浏览器（部分）<br>Ctrl+H 显示隐藏文件（切换键）<br>Ctrl+T 新建标签<br>Ctrl+W 关闭标签<br>Ctrl+Page Up 上一个标签<br>Ctrl+Page Down 下一个标签<br>Alt+N 切换到第N个标签（N为数字）<br>在Ubuntu中自定义快捷键<br>访问“System&gt;Preferences&gt;Keyboard Shortcuts”，选定想要设置的项目，然后键入快捷键即可生效。<br>终端输命令时常用到的快捷键<br>tab=补全<br>ctrl+a=开始位置<br>ctrl+e=最后位置<br>ctrl+k=删除此处至末尾所有内容<br>ctrl+u=删除此处至开始所有内容<br>ctrl+d=删除当前字母<br>ctrl+w=删除此处到左边的单词<br>ctrl+y=粘贴由ctrl+u，ctrl+d，ctrl+w删除的单词<br>ctrl+r=正在测试，还没弄明白，呵呵。<br>ctrl+l=相当于clear<br>ctrl+b=向回移动<br>ctrl+f=向前移动<br>ctrl+p=向上显示缓存命令<br>ctrl+n=向下显示缓存命令<br>ctrl+d=关闭终端<br>shift+上或下=终端上下滚动<br>shift+pgup或pgdown=终端上下翻页滚动<br>ctrl+shift+f=全屏（仅限于konsole）<br>ctrl+shift+n=新终端（terminal和konsole有所不同）<br>ctrl+c=终止</li></ol><p>窗口管理</p><ol><li>Win+E – 显示所有桌面，方便的左右选择。</li><li>Alt+Ctrl+Left/Right Arrow -切换桌面</li><li>Alt+Ctrl+Shift+Left/Right Arrow – 移动当前窗口到其他桌面</li><li>Alt + Shift+ Up Arrow – 以很酷的方式显示当前窗口</li><li>Alt+F9/F10 – 最小化/最大化当前窗口</li><li>Alt+F5 -不最大化当前窗口</li><li>Alt+F7 – 激活当前窗口的移动选项，你可以使用方向键移动当前窗口，甚至移动到其他桌面。</li><li>Alt+F8 – 用方向键调整当前窗口大小</li><li>Ctrl + Alt + D – 显示桌面/恢复当前窗口</li><li>Alt+ Tab – 切换窗口<br>Nautilus</li><li>Shift+Ctrl+N – 新建文件夹, 很有用</li><li>Alt + Enter – 查看选择文件/文件夹的属性，代替单击右键选择属性</li><li>Ctrl + 1/2 – 改变文件夹视图查看方式，图标视图/列表视图</li><li>Ctrl + W – 关闭当前Nautilus窗口</li><li>Ctrl + Shift + W – 关闭所有Nautilus窗口</li><li>Ctrl+T – 在Nautilus中新建一个标签</li><li>Alt + Up/Down Arrow – 移动到父文件夹/选择的文件夹</li><li>Alt + Left/Right Arrow – 后退/前进</li><li>Alt + Home -直接移动到主文件夹</li><li>F9 – 开关显示Nautilus侧边栏</li><li>Ctrl + H -开关显示隐藏文件夹</li><li>Ctrl + Alt + L -锁屏</li><li>Alt + F1 – 打开应用程序菜单</li><li>Alt + F2 – 打开运行应用程序对话框</li><li>Win + 鼠标滚轮 – 放大/缩小屏幕</li></ol><p>通配符 * ，？，_,[]。<br>①ls  -F                   ##会自动在列出的可执行文件后面加<em>，目录后面加/,链接后面加@<br>②ls –a             ##查看该目录下的隐藏文件，默认前面加.<br>③ls –l             ##可以查看该目录下文件的属性，会显示后缀名<br>⑧cat –n 文件名         ##主要是-n可以显示行号<br>⑨more 文件名             ##类似于cat,它适合于查看大文件，进行一页一页的查看，空格键向下查看一页，enter键向下查看一行，按q键退出<br>⑩head 和 tail 指令可以查看指定文件的头和尾，并指定显示的行数，例如：head –n 2(行数) 文件名<br>⑪less /etc/con.cfg    ##类似于more，文本阅读指令，less指令执行完后会有一个：，如果想向下翻页按空格键，如果想向上翻页按B键，如果想搜索一个字符串可以用/字符串来搜索，最后按q键退出<br>① grep un day ##可以在文件day中查找包含un的行，可以快速找到，也可以指定多个文件，例如：grep unday weather;<br>② grep ‘struct list’stack.h ##如果要查找关键词，必须用单引号括起来<br>③ find /etc –name init.d–type d–print ##查找命令，能够在指定路径下查找指定的文件（init.d）,还可以指定文件的类型（-type）,-print为标准输出<br>-type类型可选参数为：<br>（1）b 块设备文件<br>（2）f 普通文件<br>（3）c 字符设备文件<br>（4）p 命名管道<br>（5）d 目录文件<br>（6）l符号链接<br>④find /etc/usr -type f –atime +100 –print ##在/etc/usr路径下查找一百天前使用的文件（-atime n：查找最后一次使用在n天前的文件，-mtimen:查找最后一次修改在n天前的文件）<br>⑤find .–type f –atime -1 –print ##在当前目录下查找最近一天使用过的文件<br>⑥locate *.doc ##更快速的定位文件，他不是在对应路径下搜索，他是在locate命令执行时自动建立了一个整个文件名数据库，不需要用户插手，如果想更新该数据库，可以使用updatedb命令，需要root权限<br>②   whereis  -b  find  ##查找特定程序文件,-b使用来查询这个文件的可执行二进制文件，如果没有找到返回一个空的字符串<br>③   who       ##该指令可以查看当前服务器中有哪些用户登录<br>④   whoami   ##查看当前登录用户<br>⑤   uname–a   ##显示当前系统的所有有用信息<br>⑥   uname–r   ##只显示当前系统的内核版本信息<br>⑦   man  find   ##寻求帮助命令，可以查看命令的使用手册等<br>⑧   whatis   uname    ##从使用手册中获取命令简介<br>⑨   apropos   search   ##用户想要搜索一个文件时，当有想不起来该使用哪个命令，可以使用apropos命令（其实就是把包含该search的条目一并列出）<br>系统专用的数据和配置文件<br>⑩   sudo  groupadd workgroup  ##新建一个名为workgroup的用户组，<br>⑪   sudo  useradd -G workgroup lucy<br>⑫   sudo  passwd lucy ##新建用户，并归入workgroup组,设置密码<br>⑬   cd/home<br>⑭   sudomkdir work   ##在用户主目录下新建文件夹work<br>⑮   sudochgrp workgroup work/ ##将work目录的所有权交给workgroup组<br>⑯   sudochmod g+rwx work/  ##增加workgroup组对work目录的读写执行权限<br>⑰   sudochmod o-rwx work/ ##撤销其他用户对work目录的读写执行权限<br>⑱   sudochown lucy work/ ##将work目录的所有者更改为lucy用户<br>⑲   sulbb     ##切换用户指令<br>⑳   touchtest  ##建立一个空文件<br>简单命令五<br>①   rmtest   ##删除指令，删除文件test<br>②   cd ~<br>mkdirpicture document  ##在用户主目录下新建两个目录picture和document;<br>③   mkdir<del>/picture/temp   ##也可以按此方法在主目录的picture目录下新建一个temp目录<br>④   mkdir –p ~/picture1/temp    ##此命令用来创建一个完整的目录，如果picture1不存在，则先创建picture1然后创建temp<br>⑤   touch  helloworld ##用来建立一个空的文件<br>⑥   ls –l test.php    ##用来查看文件test.php文件创建的日期<br>⑦   touchtest.php   ##更新文件创建的日期<br>⑧   mvhello /bin    ##文件移动指令，这条命令是把hello文件移动到bin目录下<br>mvphotos/ /bin    ##也可以把photos目录移动到bin目录下，<br>当一个目录下有相同名的文件时，mv指令移动文件会覆盖原有文件，并没有任何提示。因此mv指令提供了-i选项，用来进行提示，避免覆盖出错<br>mv  –i hello  /bon   ##<br>mv指令还有一个-b选项，他在移动目录的同名文件后面加了一个</del>符号，避免覆盖<br>mv指令的的另一个作用就是对文件的重命名，其实就是文件在同一个目录下的移动<br>mv  hello  hello.c   ##暂时还没看懂<br>⑨   echo  “hello” &gt;hello   ##重定向新建文件指令，其意思是新建一个名为hello的文件并把hello这个字符串赋值给它。<br>⑩   cp  hello.php  /test  ##复制文件和目录指令，用于把hello.php文件复制到test目录下（其指令和mv指令相似，也会覆盖移动目录下的同名文件，可以用-i,-b可选参数来避免）<br>⑪   cp –r/test /bin  ##目录复制时，会跳过子目录，我们可以使用-r选项连同其子目录一起复制到另一个目录下。<br>⑫   rmdir  home  ##删除目录指令，只能删除空目录<br>⑬   rm  /home/</em>.php  ##删除文件或目录指令，删除后不能恢复且不会提示删除，我们可以使用-i选项来让他进行提示，避免删除错误（rm  –i /home/*.php）,对于只读文件的删除，不加-i选项也会提示<br>⑭   rm  –f hello_bak  ##对于只读文件的删除，如果确定要删除，避免进行交互操作，可以用-f选项直接删除，他的默认回答是y。<br>⑮   rm  -r /home    ##递归的进行删除，连同子目录一块删除<br>简单命令六：权限设置<br>r(读)，w(写)，x(执行)三种权限<br>①   ls  -l /home/login   ##带有-l的ls指令可以查看文件的完整属性，包括权限等。<br>②   ls  -lb  /home    ##查看目录完整属性，用-lb选项<br>③   ls  -l          ##不带文件名作为参数，表示列出当前目录下的所有文件<br>④   sudo   chown libaobao  days    ##改变文件所有权<br>⑤   sudo   chown -R  libaobao  /home  ##参数-R可以改变/home目录下所有文件目录的权限<br>⑥   sudo  chgrp workgroup days   ##将文件days的属性组设置为workgroup组<br>⑦   sudo  chgrp root /home    ##将一个路径下的所有文件和目录的属性组设置为root ,它和chown指令差不多，也可以使用-R选项（功能相同）<br>⑧   chmod u+x days     ##改变文件权限命令，文件属主（u）,文件属组（g）,其他人（o）和所有人（a）,而权限包含读（r）,写（w）,执行（x）,这条命令就是增加了属主对文件的执行权限。<br>⑨   chmod  a-x days  ##表示删除所有人对days文件的执行权限。<br>⑩   chmod  ug = rw ,o =r    days  ##这条命令表示同时赋予属主和属组对days文件的读写权限，其他人读权限<br>⑪  chmod u=g       days ##此命令旨在说明把属主和属组的权限设为相同，只有文件的属主和root用户才有权限对文件进行修改操作。<br>简单命令七：文件权限的八进制表示<br>rwx(读写执行)<br>八进制<br>二进制<br>权限<br>八进制<br>二进制<br>权限<br>1<br>001<br>–x<br>6<br>110<br>rw-<br>2<br>010<br>-w-<br>7<br>111<br>rwx<br>3<br>011<br>-wx<br>0</p><h2 id="000"><a href="#000" class="headerlink" title="000"></a>000</h2><p>4<br>100<br>r–<br>5<br>101<br>r-x<br>这样一来，文件的9位权限设置就可以用三个8进制数表示<br>①chmod  711 days ##该命令是把读写执行权限操作赋予属主，把执行权限赋予属组和其他用户<br>简单命令八：Linux系统文件类型<br>①  ls  –l  ##可以使用该命令查看文件类型，第一个字符就表示文件类型<br>Linux文件类型表<br>文件类型<br>符号<br>文件类型<br>符号<br>普通文件<br>-<br>本地域套接口<br>s<br>目录<br>d<br>有名管道<br>p<br>字符设备文件<br>c<br>符号链接<br>l<br>块设备文件<br>b<br>②  ln    -s    days      my_days  ##建立连接命令，类似于指针，就是让my_days指向days,我们访问my_days就相当于访问days一样。<br>（带有-s的符号链接被称为软连接，不带-s的链接被称为硬链接）<br>③  ln    -s    /home/etc  local ##建立连接命令还可以应用于目录，该实例表示建立一个指向/home/etc目录的链接local。<br>④   ln     days     my_days      ##硬链接和软连接功能相同，但是不常用。<br>简单命令九：输入输出重定向和管道<br>一般的ls指令是标准输出会显示在屏幕上，但是我们可以把它重定向到另一个地方去。<br>①   ls     &gt;<del>/ls_out     ##该指令是把ls的输出重定向到ls_out文件中去,这样我们就可以在用户主目录下的ls_out文件中，每一行显示一个文件名（cat  ~/ls_out）,如果ls_out文件不存在，就创建该文件，如果已经存在，则会删除原有内容，然后用新内容代替。<br>②   date&gt; date_time     ##将date命令重定向到date_time文件中去，如果要追加信息，应该使用&gt;&gt;指令<br>（uname     -r    &gt;&gt;date_time）<br>③   cat&lt; days                 ##使用重定向指令&lt;输入（不经常使用），可以用cat days代替<br>④   cat   &lt;&lt; EOF     ##立即文档指令，接受n个输入，直至输入EOF结束。<br>⑤   cat   &lt;<end>hello   ##立即文档和输出重定向混合使用，先输入字符直至输入END结束，然后把输入的内容重定向输出到hello文件中<br>⑥   管道命令是一条竖线|，将一条命令的输出链接到另一条命令的输入：<br>⑦   ls     |      grep    ay          ##ls命令先列出当前路径下的所有文件名，管道|接收到这些输出，并把它们发送给grep指令作为输入，最后grep指令在这堆文件列表中查找包含ay的字符串的文件名，并在显示器上标准输出。<br>简单命令十:软件包管理<br>安装chrome谷歌浏览器<br>①   cd</end></del>     ##打开主目录，这里默认软件的安装包放置在此目录下<br>②   sudo       dpkg      -i     安装包名称（deb格式）##安装deb格式的安装包。<br>Sudo  dpkg        -i  google_chrome_stable_ current_i386.deb<br>③   su        ##切换到root用户<br>rpm        –ivh 安装包名称（rpm格式）      ##安装rpm格式的安装包文件。<br>Rpm  -ivh google_chrome_stable_current_i386.rpm<br>卸载chrome谷歌浏览器：<br>①dpkg  -l     |      grep      chrome   ##ubuntu系统得到完整的软件包信息<br>②rpm           –query chrome     ##redhat系统得到完整的软件包信息<br>③sudo        dpkg            -r    软件包名称              ##ubuntu系统卸载软件<br>④   sudo    rpm        -e  软件包名称  ##redhat系统卸载软件<br>简单命令十一:两个基本的软件包管理工具入门rpm和dpkg(管理.deb)<br>①dpkg–l |grep  openssh   ##查看当前系统的openssh信息<br>②  dpkg –S openssh     ##可以查看系统中哪些文件是他带来的<br>③rpm  -ivh google_chrome_stable_current_i386.rpm          ##安装软件包（他提供了一个-force选项，强制安装并忽略兼容和依赖性）<br>简单命令十二：APT高级软件包管理工具<br>①  sudo apt-get update        ##更新所有软件包<br>②  apt-get常用命令<br>命令<br>描述<br>apt-get  install<br>下载并安装软件包<br>apt-get  upgrade<br>下载并安装本系统上已有的软件包的最新版<br>apt-get  remove<br>卸载特定的软件包<br>apt-get source<br>下载特定软件的源代码<br>apt-get clean</p><h2 id="删除所有的已下载的包文件"><a href="#删除所有的已下载的包文件" class="headerlink" title="删除所有的已下载的包文件"></a>删除所有的已下载的包文件</h2><p>作者：菜鸟VS大神2<br>来源：CSDN<br>原文：<a href="https://blog.csdn.net/yangyang222222222/article/details/79172463" target="_blank" rel="noopener">https://blog.csdn.net/yangyang222222222/article/details/79172463</a><br>版权声明：本文为博主原创文章，转载请附上博文链接！</p><pre><code>1.  2.  3. Ubuntu 18.04.1 LTS4. 创建虚拟机5. 向导选择自定义6. 稍后再安装系统7. 然后选择linux，注意这里下面的下拉选择Ubuntu64，因为我们下载的是64位的，如果你的电脑是32位的，就选Ubuntu即可，博主的就是因为Ubuntu，导致后面安装出错了，不过后面还可以设置的。</code></pre><ol><li>~ 代表是home目录，也就是家目录， / 代表的是根目录</li><li>用户登录后在 家目录 ，可用pwd命令查看，普通用户为 /home/用户名，root用户为/root</li><li>根目录是在最顶端的目录（因为已经不能cd ..到上一级目录了 ）</li><li>根目录是所有用户的都可以操作的，家目录用户才有权限操作（管理员可以分配权限）<br>在/mnt/hgfs/下应该就能看到刚才在虚拟机中设置的windows下的共享文件夹share了：</li><li>如果到上面一步时/mnt/hgfs/下没有共享文件夹——不要着急，再加一条命令即可：<br>vmhgfs-fuse .host:/  /mnt/hgfs/<br>可以创建一个软连接到home目录，这样方便进入共享目录：<br>cd /mnt/hgfs<br>ln -s /mnt/hgfs/share/ ~/share</li></ol><p>-s 软链。删除： rm -rf</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Missing paragraph styles</title>
      <link href="/2019/08/20/Missing%20paragraph%20styles/"/>
      <url>/2019/08/20/Missing%20paragraph%20styles/</url>
      
        <content type="html"><![CDATA[<p>When I open a document, my paragraph styles window is completely empty. There are no styles listed. There are no buttons at the bottom for new style, etc. How do I get this back? Thanks!</p><a id="more"></a><p>correct answer: trash your ID preferences<br>Troubleshooting 101: Replace, or “trash” your InDesign preferences [2009 Outdated &amp; Locked]<br>Peter Spier 2018-5-28 上午6:07When InDesign starts to behave strangely, the number one suggestion for troubleshooting is to replace (or trash, reset or restore) the application preferences. This will remove corrupt preferences and replace them with a new set of default preferences, and often end bad behavior.</p><p>There is a quick and easy method for doing this using the keyboard: close and relaunch InDesign, and IMMEDIATELY hold down Ctrl + Alt + Shift (Windows) or Cmd + Ctrl + Opt + Shift (Mac), and respond in the affirmative to the dialog asking if you really want to replace the preferences. There are two downsides to this method, however. First, you must be extremely fast on the keyboard (if you don’t see the confirmation prompt, you were too slow), and second, anytime you replace the preferences you will lose most program customizations, and using the keyboard method leaves you with no backup to restore them when the problem turns out to be something else.</p><p>My preferred method is to CLOSE INDESIGN and do a “manual” prefs replacement, which consists of finding and renaming the two files which make up the preference set: InDesign Defaults and InDesign SavedData. BOTH of these files should be replaced at the same time. You can delete them, but renaming or moving them will give you the opportunity to copy them back in the event that new prefs doesn’t cure your issue. When you restart ID, the program will look for these two files, and when they are not found, a new default set will be written.</p><p>[Defunct link removed by Peter Spier on 11/6/15]</p><p>These are normally hidden files, so you will need to set your system to show them. They will be found in various places depending on the OS, and the version of InDesign. (Edit: For Mac users running OSX 10.7 or newer, you can learn how to show hidden files here: Access hidden user library files | Mac OS 10.7 Lion)</p><p>PLEASE LOOK AT THESE PATHS CAREFULLY. They look similar, but are two different folders for the two files.</p><p>InDesign Defaults:<br>Windows XP: C:\Documents and Settings&lt;USER&gt;\Application Data\Adobe\InDesign&lt;Version #&gt;&lt;language&gt;\  (Note: Prior to version 6 [CS4] the language folder is not used).<br>Windows Vista or Windows 7 and newer: C:\Users&lt;USER&gt;\AppData\Roaming\Adobe\InDesign&lt;Version #&gt;&lt;Language&gt;\ (Note: Prior to version 6 [CS4] the language folder is not used).<br>Macintosh: Hard Drive/Users/<user>/Library/Preferences/Adobe InDesign/&lt;Version #&gt;/<language>/(Note: Prior to version 6 [CS4] the language folder is not used).</language></user></p><p>InDesign SavedData:<br>Windows XP: C:\Documents and Settings&lt;USER&gt;\Local Settings\Application Data\Adobe\InDesign&lt;Version #&gt;&lt;Language&gt;\Caches\ (Note: Prior to version 6 [CS4] the language folder is not used).<br>Windows Vista or Windows 7 and newer: C:\Users&lt;USER&gt;\AppData\Local\Adobe\InDesign&lt;Version #&gt;&lt;Language&gt;\Caches\  (Note: Prior to version 6 [CS4] the language folder is not used).<br>Macintosh: Hard Drive/Users/<user>/Library/Caches/Adobe InDesign/&lt;Version #&gt;/<language>/ (Note: Prior to version 6 [CS4] the language folder is not used).</language></user></p><p>In some earlier versions of ID, InDesign SavedData may also be found in the first directory.</p><p>As mentioned above, when you replace your preferences you will lose customizations beyond those things that are set in the preferences dialogs. These include Document and Print Presets you might have created. If you haven’t made backups already, you should go, prior to replacing the preferences, to the “Define” dialogs for printer and document presets and custom stroke styles, and select all of your custom entries, the click the save button and put the file someplace safe. After resetting preferences using the keyboard or by renaming/deleting the old files and restarting InDesign, these customized settings can be re-loaded with a single click once again in the Define dialogs.     PDF presets can be backed up in the same way, but they are stored in a different location and will not be destroyed by a simple preference reset. Other customizations that you should not lose are workspaces, keyboard shortcut sets, and find/change queries.</p><p>As a further step I strongly recommend that you make a copy of these two files when you have a working customized set. Store them in a safe place and you can use them to overwrite a corrupt set so no further editing or reloading will be required. Users of InDesign CS4 can use a free script from InTools.com to backup and store multiple sets of preferences: In-Tools Scripts » Preference Manager Script</p><p>Edit: Corrected Mac Path per Jongware’s post below.</p><p>UPDATE: I just ran across a situation in which overwriting the InDesign Defaults and InDesign SavedData files failed to restore functionality to the tools on a single user account on a multiple user system (the other account was fine). This is an absolute first and I’ve been using the technique for years, including replacing these two files on this system which is used by the student newspaper where I was a professor, in order to customize or restore preferences every semester. What did work was to use the keyboard method first, then close InDesign and manually replace the two files to restore the prefs to the proper settings.  – Peter</p><p>Further update: We have had several reports now in the CC versions of InDesign where using the manual method has failed to solve problems that are normally fixed by replacing preferences. to the best of my knowledge, using the keyboard method has solved the problem for each of those users. – Peter</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Kaldi Installation</title>
      <link href="/2019/08/20/Kaldi%20Installation/"/>
      <url>/2019/08/20/Kaldi%20Installation/</url>
      
        <content type="html"><![CDATA[<p>openFST make install error, do:<br>sudo make install</p><ol><li>git 首先，确认你的系统是否已安装git，可以通过git指令进行查看<br>如果没有，在命令行模式下输入sudo apt-get install git命令进行安装。</li></ol><a id="more"></a><p>安装完成后进行git配置，输入指令<br>git config –global user.name “xxx”<br>git config –global user.email “你的邮箱地址”<br>配置完成后，需要创建验证用的公钥，因为git是通过ssh的方式访问资源库的，所以需要在本地创建验证用的文件。使用命令ssh-keygen -C ‘you email <a href="mailto:address@gmail.com" target="_blank" rel="noopener">address@gmail.com</a>‘ -t rsa（注意ssh与-keygen之间没有空格），会在用户目录<del>/.ssh/下建立相应的密钥文件。<br>创建完公钥后，需要上传。使用命令cd ~/.ssh进入</del>/.ssh文件夹，输入gedit id_rsa.pub打开id_rsa.pub文件，复制其中所有内容。接着访问<a href="http://git.oschina.net/profile网页，点击SSH公钥，标题栏可以随意输入，公钥栏把你刚才复制的内容粘贴进去就OK了。" target="_blank" rel="noopener">http://git.oschina.net/profile网页，点击SSH公钥，标题栏可以随意输入，公钥栏把你刚才复制的内容粘贴进去就OK了。</a><br>可以使用ssh -T <a href="mailto:git@git.oschina.net" target="_blank" rel="noopener">git@git.oschina.net</a>命令来测试连接是否畅通</p><p>Also, set short names for the most useful git commands you type most often.<br>$ git config –global alias.co checkout<br>$ git config –global alias.br branch<br>$ git config –global alias.st status</p><ol start="2"><li>get Kaldi<br>We have now transitioned to GitHub for all future development. You first need to install Git. The most current version of Kaldi, possibly including unfinished and experimental features, can be downloaded by typing into a shell:<br>git init<br>git config http.postBuffer 524288000<br>git clone <a href="https://github.com/kaldi-asr/kaldi.git" target="_blank" rel="noopener">https://github.com/kaldi-asr/kaldi.git</a> kaldi –origin upstream<br>cd kaldi<br>If you want to get updates and bug fixes you can go to some checked-out directory, and type<br>git pull<br>If “git pull” prints out a message telling it cannot pull the remote changes because you have changed files local</li></ol><hr><p>Assuming Git is installed, to get the latest code you can type<br>    git clone <a href="https://github.com/kaldi-asr/kaldi.git" target="_blank" rel="noopener">https://github.com/kaldi-asr/kaldi.git</a> kaldi-trunk –origin golden<br>Then cd to kaldi-trunk. Look at the INSTALL file and follow the instructions (it points you to two subdirectories). Look carefully at the output of the installation scripts, as they try to guide you what to do. Some installation errors are non-fatal, and the installation scripts will tell you so (i.e. there are some things it installs which are nice to have but are not really needed). The “best-case” scenario is that you do:<br>   cd kaldi-trunk/tools/; make; cd ../src; ./configure; make<br>and everything will just work; however, if this does not happen there are fallback plans (e.g. you may have to install some package on your machine, or run install_atlas.sh in tools/, or run some steps in tools/INSTALL manually, or provide options to the configure script in src/). If there are problems, there may be some information in The build process (how Kaldi is compiled) that will help you; otherwise, feel free to contact the maintainers (Other Kaldi-related resources (and how to get help)) and we will be happy to help.<br>Software packages required<br>The following is a non-exhaustive list of some of the packages you need in order to install Kaldi. The full list is not important since the installation scripts will tell you what you are missing.<br>    • Git: this is needed to download Kaldi and other software that it depends on.<br>    • wget is required for the installation of some non-Kaldi components described below<br>    • The example scripts require standard UNIX utilities such as bash, perl, awk, grep, and make.<br>It can also be helpful if you have an ATLAS linear-algebra package installed on your system. Most systems already have this (You can also search the packages in linux for installation by simple commands like “yum search atlas” or “apt-cache search libatlas”); the best approach is to ignore this requirement for now and see if you have problems when you install Kaldi.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>About Kaldi</title>
      <link href="/2019/08/20/About%20Kaldi/"/>
      <url>/2019/08/20/About%20Kaldi/</url>
      
        <content type="html"><![CDATA[<p>2009 Johns Hopkins University<br>2010: Dan Povey started coding Kaldi at Microsoft<br>2011: Kaldi toolkit presented at conferences<br>2012: Dan Povey joins JHU in Baltimore (leaving Microsoft)<br>2015: Kaldi moved from SourceForge to GitHub</p><a id="more"></a><p>Speech recognition:<br>    • HMM decoder using WFST transducers<br>    • keyword search based on WFSTs<br>    • Acoustic models: GMM, SGMM, DNN (nnet1,2,3) (DNN types: feed-forward, Convolutional, LSTM, BLSTM)<br>    • Language models: N-GRAM, RNNLM<br>    • speaker adaptation techniques (CMVN, VTLN, fMLLR, iVector based)<br>    • sequence-discriminative training bMMI, sMBR (global optimization instead of ‘per-frame’ training)<br>Kaldi is similar in aims and scope to HTK.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Speech Recognition Document</title>
      <link href="/2019/08/20/Speech%20Recognition%20Document/"/>
      <url>/2019/08/20/Speech%20Recognition%20Document/</url>
      
        <content type="html"><![CDATA[<p>The Application of Hidden Markov Models in Speech Recognition<br>Fully Supervised Speaker Diarization – 谷歌开源AI能区分声音 准确率达92%<br>OpenFst A General and Efficient Weighted<br>lecture6 OpenFst</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>git</title>
      <link href="/2019/08/20/git/"/>
      <url>/2019/08/20/git/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00150154460073692d151e784de4d718c67ce836f72c7c4000" target="_blank" rel="noopener">https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00150154460073692d151e784de4d718c67ce836f72c7c4000</a><br>Linus在1991年创建了开源的Linux<br>CVS、SVN这些免费的版本控制系统吗？因为Linus坚定地反对CVS和SVN，这些集中式的版本控制系统不但速度慢，而且必须联网才能使用。有一些商用的版本控制系统，虽然比CVS、SVN好用，但那是付费的，和Linux的开源精神不符。</p><a id="more"></a><p>2002年，Linux系统已经发展了十年了，代码库之大让Linus很难继续通过手工方式管理了，社区的弟兄们也对这种方式表达了强烈不满，于是Linus选择了一个商业的版本控制系统BitKeeper，BitKeeper的东家BitMover公司出于人道主义精神，授权Linux社区免费使用这个版本控制系统。<br>安定团结的大好局面在2005年就被打破了，原因是Linux社区牛人聚集，不免沾染了一些梁山好汉的江湖习气。开发Samba的Andrew试图破解BitKeeper的协议（这么干的其实也不只他一个），被BitMover公司发现了（监控工作做得不错！），于是BitMover公司怒了，要收回Linux社区的免费使用权。Linus可以向BitMover公司道个歉，保证以后严格管教弟兄们，嗯，这是不可能的。实际情况是这样的：<br>Linus花了两周时间自己用C写了一个分布式版本控制系统，这就是Git！一个月之内，Linux系统的源码已经由Git管理了！牛是怎么定义的呢？大家可以体会一下。Git迅速成为最流行的分布式版本控制系统，尤其是2008年，GitHub网站上线了，它为开源项目免费提供Git存储，无数开源项目开始迁移至GitHub，包括jQuery，PHP，Ruby等等。<br>ls –ah<br>Git comes with a tool called git config that lets you get and set configuration variables that control all aspects of how Git looks and operates. These variables can be stored in three different places:<br>    1. /etc/gitconfig file: Contains values applied to every user on the system and all their repositories. If you pass the option –system to git config, it reads and writes from this file specifically. (Because this is a system configuration file, you would need administrative or superuser privilege to make changes to it.)<br>    2. ~/.gitconfig or ~/.config/git/config file: Values specific personally to you, the user. You can make Git read and write to this file specifically by passing the –global option, and this affects all of the repositories you work with on your system.<br>    3. config file in the Git directory (that is, .git/config) of whatever repository you’re currently using: Specific to that single repository. You can force Git to read from and write to this file with the –local option, but that is in fact the default. (Unsurprisingly, you need to be located somewhere in a Git repository for this option to work properly.)<br>If you want to check your configuration settings, you can use the git config –list command to list all the settings Git can find at that point:<br>$ git config –list<br>user.name=John Doe<br>user.email=johndoe@example.com<br>color.status=auto<br>color.branch=auto<br>color.interactive=auto<br>color.diff=auto</p><p>Git 里面的 origin 到底代表啥意思?</p><p>作者：田雅文<br>链接：<a href="https://www.zhihu.com/question/27712995/answer/39946123" target="_blank" rel="noopener">https://www.zhihu.com/question/27712995/answer/39946123</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。<br>你的代码库(repository)可以存放在你的电脑里，同时你也可以把代码库托管到Github的服务器上。在默认情况下，origin指向的就是你本地的代码库托管在Github上的版本。我们假设你首先在github上创建了一个Repository，叫做repository，假设你的Github ID是user1,这个时候指向你的代码库的链接是<br><a href="https://github.com/user1/repository" target="_blank" rel="noopener">https://github.com/user1/repository</a><br>如果你在terminal里输入<br>git clone <a href="https://github.com/user1/repository" target="_blank" rel="noopener">https://github.com/user1/repository</a><br>那么git就会在本地拷贝一份托管在github上的代码库这个时候你cd到repository然后输入<br>git remote -v<br>你会看到控制台输出<br>origin <a href="https://github.com/user1/repository.git" target="_blank" rel="noopener">https://github.com/user1/repository.git</a> (fetch)<br>origin <a href="https://github.com/user1/repository.git" target="_blank" rel="noopener">https://github.com/user1/repository.git</a> (push)<br>也就是说git为你默认创建了一个指向远端代码库的origin（因为你是从这个地址clone下来的）再假设现在有一个用户user2 fork了你个repository，那么他的代码库链接就是这个样子<br><a href="https://github.com/user2/repository" target="_blank" rel="noopener">https://github.com/user2/repository</a><br>如果他也照着这个clone一把，然后在他的控制台里输入git remote -v<br>他会看的的就是<br>origin <a href="https://github.com/user2/repository.git" target="_blank" rel="noopener">https://github.com/user2/repository.git</a> (fetch)<br>origin <a href="https://github.com/user2/repository.git" target="_blank" rel="noopener">https://github.com/user2/repository.git</a> (push)<br>可以看的origin指向的位置是user2的的远程代码库这个时候，如果user2想加一个远程指向你的代码库，他可以在控制台输入<br>git remote add upstream <a href="https://github.com/user1/repository.git" target="_blank" rel="noopener">https://github.com/user1/repository.git</a><br>然后再输入一遍 git remote -v输出结果就会变为<br>origin <a href="https://github.com/user2/repository.git" target="_blank" rel="noopener">https://github.com/user2/repository.git</a> (fetch)<br>origin <a href="https://github.com/user2/repository.git" target="_blank" rel="noopener">https://github.com/user2/repository.git</a> (push)<br>upstream <a href="https://github.com/user1/repository.git" target="_blank" rel="noopener">https://github.com/user1/repository.git</a> (push)<br>upstream <a href="https://github.com/user1/repository.git" target="_blank" rel="noopener">https://github.com/user1/repository.git</a> (push)<br>增加了指向user1代码库的upstream，也就是之前对指向位置的命名。总结来讲，顾名思义，origin就是一个名字，它是在你clone一个托管在Github上代码库时，git为你默认创建的指向这个远程代码库的标签， @陈肖恩的答案并不准确，origin指向的是repository，master只是这个repository中默认创建的第一个branch。当你git push的时候因为origin和master都是默认创建的，所以可以这样省略，但是这个是bad practice，因为当你换一个branch再git push的时候，有时候就纠结了</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu18.04安装ibus拼音输入</title>
      <link href="/2019/08/20/Win10+Ubuntu18.04%20UEFI%E5%90%AF%E5%8A%A8%20%E5%8F%8C%E7%A1%AC%E7%9B%98/"/>
      <url>/2019/08/20/Win10+Ubuntu18.04%20UEFI%E5%90%AF%E5%8A%A8%20%E5%8F%8C%E7%A1%AC%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<p>安装iBus框架<br>运行命令sudo apt-get install ibus ibus-clutter ibus-gtk ibus-gtk3 ibus-qt4<br>启动iBus框架<br>im-config -s ibus<br>im-switch -s </p><a id="more"></a><p>ibus（官方文档上讲的用这个，但是实际，im-switch 不存在，用上面那个就好）<br>安装ibus拼音输入引擎<br>运行命令sudo apt-get install ibus-pinyin<br>启用ibus-pinyin<br>命令行输入ibus-setup<br>ibus输入法安装<br>在中文语言包安装完成后，就需要安装ibus输入法了，需要在Terminal中输入：<br>sudo apt-get install ibus ibus-clutter ibus-gtk ibus-gtk3 ibus-qt4<br>1<br>来安装ibus框架。用<br>im-config -s ibus<br>1<br>切换到ibus框架。再安装拼音引擎：<br>sudo apt-get install ibus-pinyin<br>1<br>再调出ibus Preference来添加该拼音输入法：<br>sudo ibus-setup<br>1<br>在弹出对话框中 （点击add搜索chinese,点击选择pinyin,若找不到。尝试先<br>重启！重启！重启！<br>一下，再进去设置，就有了）<br>在系统设置的区域与语言中添加iBus的智能拼音输入法如下图</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Notepadqq</title>
      <link href="/2019/08/20/Notepadqq/"/>
      <url>/2019/08/20/Notepadqq/</url>
      
        <content type="html"><![CDATA[<p>sudo snap install notepadqq</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电脑同时登陆多个微信</title>
      <link href="/2019/08/20/ubuntu18.04%E5%AE%89%E8%A3%85ibus%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5/"/>
      <url>/2019/08/20/ubuntu18.04%E5%AE%89%E8%A3%85ibus%E6%8B%BC%E9%9F%B3%E8%BE%93%E5%85%A5/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu Common Commands</title>
      <link href="/2019/08/20/Ubuntu%20Common%20Commands/"/>
      <url>/2019/08/20/Ubuntu%20Common%20Commands/</url>
      
        <content type="html"><![CDATA[<p>gnome-screenshot -w<br>为了访问方便，我一般会为该共享文件夹建立一个符号链接。sudo ln –s /mnt/hgfs/windows_share /windows_share</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电脑同时登陆多个微信</title>
      <link href="/2019/08/20/%E5%88%A9%E7%94%A8chown%E6%94%B9%E5%8F%98%E6%89%80%E6%9C%89%E8%80%85/"/>
      <url>/2019/08/20/%E5%88%A9%E7%94%A8chown%E6%94%B9%E5%8F%98%E6%89%80%E6%9C%89%E8%80%85/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu下安装virtualbox并启用usb打印机</title>
      <link href="/2019/08/20/ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85virtualbox%E5%B9%B6%E5%90%AF%E7%94%A8usb%E6%89%93%E5%8D%B0%E6%9C%BA/"/>
      <url>/2019/08/20/ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85virtualbox%E5%B9%B6%E5%90%AF%E7%94%A8usb%E6%89%93%E5%8D%B0%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<p>打开虚拟系统设置,在“USB设备”标签下,勾选上”启用USB控制器”以及”2.0控制器”增加对USB2.0 的支持。<br>按说这个时候已经搞定了。可是在USB列表里面却没有任何USB设备。这是为什么呢?谷歌了一下,找到了一篇文章(具体地址已经无法回忆起来了,囧),解释了一下原因。<br>原来是vbox 所在的用户组比如要包括当前用户才行。</p><a id="more"></a><p>查看当前用户名:<br><a href="mailto:aliyunzixun@xxx.com" target="_blank" rel="noopener">aliyunzixun@xxx.com</a>:<del>$ whoami<br>sharl<br>查看vbox 所在的组:<br><a href="mailto:aliyunzixun@xxx.com" target="_blank" rel="noopener">aliyunzixun@xxx.com</a>:</del>$ cat /etc/group | grep vbox<br>vboxusers:x:125:sharl<br>将当前用户加入vbox组:<br>usermod -a -G vboxusers sharl<br>即可。<br>此时,重启系统。再次打开虚拟机,果然,USB设备都已经被识别、访问到了。<br>这些,在“设备”菜单下就可以看到。<br>添加后,虚拟机系统果然发现了新硬件,按照一般步骤,安装驱动即可正常使用。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>ubuntu挂载Windows共享文件夹</title>
      <link href="/2019/08/20/ubuntu%E6%8C%82%E8%BD%BDWindows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/"/>
      <url>/2019/08/20/ubuntu%E6%8C%82%E8%BD%BDWindows%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</url>
      
        <content type="html"><![CDATA[<p>mount -t cifs -o username=’youbuntu’,password=’youbuntu’ //192.168.001.105/wysync  /mnt/vBox</p><h1 id="2-通过修改fstab文件，支持开机自动挂载"><a href="#2-通过修改fstab文件，支持开机自动挂载" class="headerlink" title="2.通过修改fstab文件，支持开机自动挂载"></a>2.通过修改fstab文件，支持开机自动挂载</h1><h1 id="修改-etc-fstab文件，文件最后加入："><a href="#修改-etc-fstab文件，文件最后加入：" class="headerlink" title="修改/etc/fstab文件，文件最后加入："></a>修改/etc/fstab文件，文件最后加入：</h1><h1 id="192-168-1-100-workspace-mnt-share-cifs-auto-username-’echo’-password-’123456’-0-0"><a href="#192-168-1-100-workspace-mnt-share-cifs-auto-username-’echo’-password-’123456’-0-0" class="headerlink" title="//192.168.1.100/workspace   /mnt/share cifs  auto,username=’echo’,password=’123456’  0 0"></a>//192.168.1.100/workspace   /mnt/share cifs  auto,username=’echo’,password=’123456’  0 0</h1><p>chmod +x ./examples/mnist/bb.sh</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Win10+Ubuntu18.04 UEFI启动 双硬盘</title>
      <link href="/2019/08/20/Win10+Ubuntu1804UEFI%E5%90%AF%E5%8A%A8%E5%8F%8C%E7%A1%AC%E7%9B%98/"/>
      <url>/2019/08/20/Win10+Ubuntu1804UEFI%E5%90%AF%E5%8A%A8%E5%8F%8C%E7%A1%AC%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<p>Win10+Ubuntu18.04 亲测UEFI启动模式双硬盘+双系统成功安装经验<br>置顶 2018年06月20日 00:24:03 漠北尘-Gavin 阅读数：8034</p><p>温馨提示：  本贴适用于 Win10 UEFI 模式启动+双硬盘（固态硬盘+机械硬盘）安装 ubuntu18.04 双系统<br>本人电脑型号： 戴尔游匣5575 （128固态+1T机械硬盘），Win10UEFI启动模式，64位操作系统<br>ubuntu18.04下载链接：<a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="noopener">https://www.ubuntu.com/download/desktop</a></p><a id="more"></a><p>系统安装过程应注意的事项：<br>    1、安装原理<br>    2、安装环境<br>    3、安装过程<br>        3.1、安装环境配置<br>        3.2、分配硬盘安装空间<br>        3.3、制作启动U盘<br>        3.4、U盘启动安装<br>            3.4.1、基本步骤<br>            3.4.2、盘符选择<br>            3.4.3、分区挂载<br>        4、安装完成<br>1、安装原理：<br>        不管是单系统还是双系统，是legacy启动还是uefi启动，系统安装原理都是一样的，核心就是：系统部署+系统引导，电脑在启动后只有根据引导文件找到已经部署的系统才能正常启动。那些img、iso等各种类型的镜像文件，是系统的封装形式；进PE安装或者U盘、光盘启动盘安装，是系统的安装方式；用easyBCD、Bootice等工具修复系统引导，是改变系统的启动路径。<br>2、安装环境：<br>        安装双系统之前首先要了解自己电脑的软硬件环境，不同的软硬件环境搭配会导致不同的安装方法，这一点一定牢记！！网上有很多种安装教程，但是我们直接拿来用却不一定能成功，而且是往往不能成功，原因一般都不是这些教程本身有错误，而是因为其应用的环境与我们安装系统的软硬件环境有差异。<br>我的环境是：uefi启动模式下的win10 + ubutu18.04，其中win10 安装在 128G固态硬盘上（这也是为啥现在win10 启动时间仅仅10 几秒的原因），Ubuntu18.04LTS 安装在1T 机械硬盘上<br>3、安装过程：<br>3.1、环境配置<br>开机按住 F2 进入  BOIS 设置（不同电脑品牌可能不太一样，有些品牌的电脑开机在右下角有提示，比如戴尔，具体方式自己百度） 用键盘上的方向键 右键 移动光标 到 Boot 选项 ，再用 键盘上的方向键 下键 移动光标至 Secure Boot 将其  Enabled  修改为 Disabled，（Secure Boot 是安全启动项，不关闭的安装到 选择安装类型时 会提提示输入 安全启动项 密码，这个东西打售后技术支持 他们也不会告诉你的，所以为避免不必要的麻烦，一定要记得关闭 安全启动项 ），如图所示：<br>进入 BOIS 界面：按下图设置：</p><p>完成上述修改后，按下 F10，按下图设置：</p><p>重启后，按 F2 进入 BIOS ,设置完成后 Boot 的界面如下图： </p><p>这说明 Secure Boot 项设置完成，之后 按  ESC 退出 BOIS ,电脑重启<br>    3.2、 分配硬盘安装空间<br>        win10 自带分区功能，鼠标放在 此电脑 上 右键  选择  管理  ，打开界面后选择 磁盘管理  ，接下来在你的 机械硬盘  上  找到一个 容量比较大的磁盘  鼠标选中 容量比较大的磁盘  鼠标右键 压缩磁盘  ，至于压缩磁盘的 大小是自己的磁盘可用量而定  ，我的 压缩磁盘 210GB （刚开始只分配了 150GB ，后来发现不够用， 卸载重新 压缩磁盘 安装的，建议：如果磁盘容量足够大，可以压缩空间大于 200G ），如下图所示：<br>注意： 压缩的磁盘空间  一定不要分配盘符（即  不要新建卷  ，也即是不需要盘符 D、 E、F这些东西，保持未分配状态）<br>查看 磁盘1 的分区方式 ，如下图：</p><p>压缩后的磁盘空间 210GB  状态 ： 未分配（不要新建卷，保持未分配状态）</p><p>磁盘空间分配完成<br>     3.3、制作启动U盘<br>            这一步很关键，若电脑是 UEFI 启动模式，而不是  传统的 Legacy 启动，制作的  启动U盘 也要选择 UEFI 启动模式  否则 无法启动<br>           还要注意磁盘的 分区表 是 GPT 还是 MBR ，MBR是旧的分区表形式，GPT 是新的分区表形式，至于二者的具体区别这里不多说，想了解的自行百度，若是 GPT 分区表，制作 U盘 时 就要选择 GPT  ，否则 无法启动<br>制作 启动U盘的工具 推荐这一款 :   下载链接：<a href="https://download.csdn.net/download/xrinosvip/10568860" target="_blank" rel="noopener">https://download.csdn.net/download/xrinosvip/10568860</a>   （当然你也可以用其他U盘制作工具，自行百度）<br>            由于我的笔记本 是  UEFI模式启动，机械硬盘是  GPT 分区方案，故在制作  启动U盘  时，选择  用于UEFI计算机的GPT分区方案<br>        至于有些教程说 把 UEFI 模式 在 Boot 中修改为 Legacy 启动模式，对于UEFI 启动模式的 电脑，这是没必要的，这种方法陈旧了，对于新启动模式的电脑 早已不适用，而且就算安装成功，启动win10  和 Ubuntu 时，也要来回修改 Boot 下的 Boot List Option(启动模式），而且这种方法安装的双系统有一个 致命的缺点 就是容易出现 系统崩溃 ，况且 ubuntu18.04 LTS 也是长期支持版，本来就支持  UEFI 启动模式，而且 Legacy 模式 也无法 启动win10 ,具体制作过程如图下图所示：</p><p>设置：按照上述图片中的 红色箭头 标注处设置，其余选项默认就可以<br>3.4、U盘启动安装<br>3.4.1、基本步骤<br>插入制作好的U盘，重启电脑，狂点F12（不同主板按键不同)进入Bootloader，找到自己  U盘  ，使用键盘上的方向键选中（有些教程说要设置  U盘启动  ，重启就自动进入安装界面，这一步不是必须的，只要找到自己的 U盘即可),，按下  Enter  ,即可进入  ubuntu18.04  的安装界面,  这里可以选择 试用（在试用界面里左边工具栏 有安装图标）， 当然也可选择  直接安装，至于选择哪种安装方式都是一样的，具体过程如下图所示：<br>按F12 进入启动项 ，选择制作的 安装U盘</p><p>选中 制作的 U盘  ，按下 Enter ,即可进入安装Ubuntu18.04 界面，会出现  试用不安装  和  直接安装<br>选择 试用不安装进入下列界面：</p><p>下一步安装：</p><p>直接安装  和 试用不安装 进行上面两步操作后，都会进入下面界面：<br>选择安装语言，按图示操作即可：</p><p>下一步，选择键盘布局：</p><p>下一步，Updates and others software:</p><p>下一步，安装类型，一定要选择 something else:</p><p>下一步，分区挂载，这一步很关键：</p><p>3.4.2、盘符选择<br>在原有系统上安装双系统有一个基本原则，那就是无论新系统是否安装成功，都不要破坏原系统环境，否则就是赔了夫人又折兵了。注意Ubuntu盘符的命名特点“sdxy”，其中x指物理磁盘号，y指磁盘的逻辑分区号，如sda1指第一块物理磁盘上的第一块逻辑分区，sdb2指第二块物理磁盘上的第二块逻辑分区。只要找准磁盘分区进行安装，原系统环境就不会被破坏，Ubuntu重装个十次八次的都有恃无恐。<br>压缩的分区如下图：</p><p>下一步</p><p>3.4.3、分区挂载</p><p>这一步非常重要！非常重要！非常重要！，这一步关系到  Ubuntu系统是否会覆盖掉自带的win10系统  ，也关系到  双系统能否安装成功  ，安装到   Installation type  这一步时，一定要慢慢来，选择   Something else  ,然后再点击   Continue ,(此处点击  Contiue 一定要慎重，并不是如某些教程所说的  一顿  Continue 狂点，狂点  Continue 造成的个人损失 本人概不负责），第一次安装一定要严格，慢慢的按照步骤来操作</p><p>我的安装方案：<br>其实我只挂载了 两个分区： 1、 挂载 /     2、 挂载 / home  分别分配空间  90GB 和 110GB ，其他的分区不是必须的，这两个分区就够了，下面的挂载分区介绍 仅供参考，想了解看一下，具体操作过程如下图所示：<br>挂载第一个分区， 挂载分区 / :</p><p>下一步，在弹出来的界面，分配  挂载分区 / 大小：</p><p>第一个挂载分区 / ，完成，点击 OK<br>下一步，挂载分区 /home :</p><p>下一步，设置 挂载分区 /home 大小：</p><p>挂载分区 /home 完毕，点击 OK, 还不能安装！！！<br>下一步，选择 将 Boot 安装在 Windows boot Manager 中：</p><p>下一步</p><p>下一步</p><p>下一步</p><p>下一步</p><p>下一步，进入 安装界面：</p><p>挂载分区介绍：<br>1、swap交换空间，这个也就是虚拟内存的地方，选择主分区和空间起始位置。如果你给Ubuntu系统分区容量足够的话，最好是能给到你物理内存的2倍大小，像我8GB内存，就可以给个16GB的空间给它，这个看个人使用情况，太小也不好，太大也没用。（其实我只给了8GB，没什么问题），其实也可以不设置，如果内存足够大，没必要设置<br>2、boot 一定记住，不要单独/boot划分区;是的不要，不然就完蛋了，结果就是只能进一个系统，因为这里是EFI引导替代boot的grub;也请放心efi分区不会不够用，linux内核不在efi分区而在/boot，在你挂载分区，你会发现也是没有 Boot 的 挂载选项的，新教程这一项不需要了！<br>在安装和分区界面，看到最下面一个，安装启动器到，换成你的EFI分区，一般有windows boot manager 等标识，就是 /dev/sda1 EFI 这样的（不分配Boot的具体原因参照此贴：<a href="http://forum.ubuntu.org.cn/viewtopic.php?p=3200137）" target="_blank" rel="noopener">http://forum.ubuntu.org.cn/viewtopic.php?p=3200137）</a><br>3、挂载“/home”，类型为EXT4日志文件系统，选中逻辑分区和空间起始位置，这个相当于你的个人文件夹，类似Windows里的User，如果你是个娱乐向的用户，我建议最好能分配稍微大点，因为你的图片、视频、下载内容基本都在这里面，这些东西可不像在Win上面你想移动就能移动的。<br>总的来说，最好不要低于32GB ，我Ubuntu分区的总大小是150GB ，这里我给了110GB 给home。<br>（这里特别提醒一下，Ubuntu最新发行版不建议强制获取Root权限，因为我已经玩崩过一次。所以你以后很多文档、图片、包括免安装软件等资源不得不直接放在home分支下面。你作为图形界面用户，只对home分支有完全的读写执行权限，其余分支例如usr你只能在终端使用sudo命令来操作文件，不利于存放一些直接解压使用的免安装软件。因此，建议home分支多分配一点空间……）<br>                    4、挂载“/usr”，类型为EXT4日志文件系统，选中逻辑分区和空间起始位置，这个相当于你的软件安装位置，Linux下一般来说安装第三方软件你是没办法更改安装目录的，系统都会统一地安装到/usr目录下面，因此你就知道了，这个分区必须要大<br>                    5、最后，挂载“/”，类型为EXT4日志文件系统，选中逻辑分区和空间起始位置，<br>因为除了home和usr还有很多别的目录，但那些都不是最重要的，“/”就把除了之前你挂载的home和usr外的全部杂项囊括了，大小也不要太小，最好不低于8GB。如果你非要挨个仔细分配空间，那么你需要知道这些各个分区的含义（Linux(ubuntu)分区挂载点介绍）<br>不过就算你把所有目录都自定义分配了空间也必须要给“/”挂载点分配一定的空间 。</p><p>4、 安装完成 ，重启电脑，默认 Ubuntu 是第一启动项， 重启电脑不能启动 Ubuntu<br>如果启动后报错：BUG soft Lockup,关于这个错误参照下面链接：<a href="https://blog.csdn.net/xrinosvip/article/details/80447139" target="_blank" rel="noopener">https://blog.csdn.net/xrinosvip/article/details/80447139</a><br>5、纯英文论文看不懂，翻译软件来帮忙，支持整篇PDF或Word上传，翻译高效准确，首次注册送翻译积分，用于翻译论文：翻译狗<br>6、Ubuntu 下使用Linux命令简单总结：<a href="https://blog.csdn.net/xrinosvip/article/details/80894728" target="_blank" rel="noopener">https://blog.csdn.net/xrinosvip/article/details/80894728</a><br>7、Win10 和Ubuntu 启动引导向管理软件解决办法：<a href="https://blog.csdn.net/xrinosvip/article/details/80994450" target="_blank" rel="noopener">https://blog.csdn.net/xrinosvip/article/details/80994450</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hide folders in this computer</title>
      <link href="/2019/08/19/Hide%20folders%20in%20this%20computer/"/>
      <url>/2019/08/19/Hide%20folders%20in%20this%20computer/</url>
      
        <content type="html"><![CDATA[<p>Windows Registry Editor Version 5.00<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag]<br>“ThisPCPolicy”=”Hide”</p><p>[HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{31C0DD25-9439-4F12-BF41-7FF4EDA38722}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{35286a68-3c57-41a1-bbb1-0eae73d76c95}\PropertyBag]<br>“ThisPCPolicy”=”Hide”</p><a id="more"></a><p>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{35286a68-3c57-41a1-bbb1-0eae73d76c95}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{f42ee2d3-909f-4907-8871-4c22fc0bf756}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{f42ee2d3-909f-4907-8871-4c22fc0bf756}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{7d83ee9b-2244-4e70-b1f5-5393042af1e4}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{7d83ee9b-2244-4e70-b1f5-5393042af1e4}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{0ddd015d-b06c-45d5-8c4c-f59713854639}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{0ddd015d-b06c-45d5-8c4c-f59713854639}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{a0c69a99-21c8-4671-8703-7934162fcf1d}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{a0c69a99-21c8-4671-8703-7934162fcf1d}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{B4BFCC3A-DB2C-424C-B029-7FE99A87C641}\PropertyBag]<br>“ThisPCPolicy”=”Hide”<br>[HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Explorer\FolderDescriptions{B4BFCC3A-DB2C-424C-B029-7FE99A87C641}\PropertyBag]<br>“ThisPCPolicy”=”Hide”</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>电脑同时登陆多个微信</title>
      <link href="/2019/08/19/%E7%94%B5%E8%84%91%E5%90%8C%E6%97%B6%E7%99%BB%E9%99%86%E5%A4%9A%E4%B8%AA%E5%BE%AE%E4%BF%A1/"/>
      <url>/2019/08/19/%E7%94%B5%E8%84%91%E5%90%8C%E6%97%B6%E7%99%BB%E9%99%86%E5%A4%9A%E4%B8%AA%E5%BE%AE%E4%BF%A1/</url>
      
        <content type="html"><![CDATA[<p>TASKKILL /F /IM wechat.exe<br>start “” “C:\Program Files (x86)\Tencent\WeChat\WeChat.exe”<br>start “” “C:\Program Files (x86)\Tencent\WeChat\WeChat.exe”</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/08/19/hello-world/"/>
      <url>/2019/08/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><a id="more"></a><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
